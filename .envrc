export ENV=${DIRENV_ENV:-dev}
export CF_API_KEY=${CF_API_KEY:-''}
export CF_API_EMAIL=${CF_API_EMAIL:-''}

## Set docker compose file to use based on environment
# if [[ "${ENV}" == "dev" || "${ENV}" == "demo" ]]; then
#     export COMPOSE_FILE="./containers/dev.compose.yml"
# elif [[ "${ENV}" == "prod" ]]; then
#     export COMPOSE_FILE="./containers/compose.yml"
# fi

## Unload direnv before launching tmux, avoid issues with
#  env vars in subshells when launching tmux with direnv activated
alias tmux='direnv exec / tmux'

function init_env() {
    local _env=$ENV
    echo "[DEBUG] init ENV: $_env"

    echo "[DEBUG] Create path: ./direnv/${_env}"
    mkdir -p ".direnv/${_env}"

    if [[ ! -f ".direnv/${_env}/.env" ]]; then
        echo "[DEBUG] Create file: .direnv/${_env}/.env"
        {
            echo "export ENV_FOR_DYNACONF=${_env:-dev}" >> .direnv/${_env:-dev}/.env
            echo "export DYNACONF_DB_DATABASE=\".db/${_env:-dev}-db.sqlite3\"" >> .direnv/${_env:-dev}/.env
            echo "export CF_API_EMAIL=\"$CF_API_EMAIL\"" >> .direnv/${_env:-dev}/.env
        } >> ".direnv/${_env}/.env"
    fi

    if [[ ! -f ".direnv/${_env}/.secrets" ]]; then
        echo "[DEBUG] Create file: .direnv/${_env}/.secrets"
        touch .direnv/${_env}/.secrets

        echo "export CF_API_KEY=\"${CF_API_KEY}\"" >> .direnv/${_env}/.secrets
    fi
}

## Initialize .direnv/ & env files
init_env

## Source env file
if [[ "$ENV" ]]; then
    if [[ "$ENV" == "prod" ]]; then
        source ".direnv/prod/.env"
        source ".direnv/prod/.secrets"
    elif [[ "$ENV" == "rc" ]]; then
        source ".direnv/rc/.env"
        source ".direnv/rc/.secrets"
    elif [[ "$ENV" == "demo" ]]; then
        source ".direnv/demo/.env"
        sourcee ".direnv/demo/.secrets"
    else
        source ".direnv/dev/.env"
        source ".direnv/dev/.secrets"
    fi
else
    source ".direnv/dev/.env"
    source ".direnv/dev/.secrets"
fi

## Run a git fetch if in a git repo
if on_git_branch; then
    echo && git status --short --branch &&
    echo && git fetch --verbose
fi
